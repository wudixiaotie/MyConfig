// Place your key bindings in this file to override the defaultsauto[]
[
    {
        "key": "ctrl+shift+n",
        "command": "cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+down",
        "command": "-cursorDownSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+p",
        "command": "cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+up",
        "command": "-cursorUpSelect",
        "when": "textInputFocus"
    },
    {
        "key": "pagedown",
        "command": "-cursorPageDown",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+-",
        "command": "undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+z",
        "command": "-undo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+g",
        "command": "workbench.action.gotoLine"
    },
    {
        "key": "alt+g g",
        "command": "-workbench.action.gotoLine"
    },
    {
        "key": "ctrl+alt+n",
        "command": "block-travel.jumpDown",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+down",
        "command": "-block-travel.jumpDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+alt+p",
        "command": "block-travel.jumpUp",
        "when": "editorTextFocus"
    },
    {
        "key": "alt+up",
        "command": "-block-travel.jumpUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+p",
        "command": "block-travel.selectUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+up",
        "command": "-block-travel.selectUp",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+n",
        "command": "block-travel.selectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+down",
        "command": "-block-travel.selectDown",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+shift+e",
        "command": "cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+cmd+right",
        "command": "-cursorEndSelect",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+]",
        "command": "-editor.action.indentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "cmd+[",
        "command": "-editor.action.outdentLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+shift+-",
        "command": "-workbench.action.navigateForward"
    },
    {
        "key": "ctrl+shift+-",
        "command": "editor.action.customEditor.undo",
        "when": "focusedCustomEditorIsEditable && !inputFocus"
    },
    {
        "key": "cmd+z",
        "command": "-editor.action.customEditor.undo",
        "when": "focusedCustomEditorIsEditable && !inputFocus"
    },
    {
        "key": "ctrl+shift+-",
        "command": "editor.action.webvieweditor.undo",
        "when": "!editorFocus && !inputFocus && !webviewHasOwnEditFunctions && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "cmd+z",
        "command": "-editor.action.webvieweditor.undo",
        "when": "!editorFocus && !inputFocus && !webviewHasOwnEditFunctions && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+shift+=",
        "command": "editor.action.customEditor.redo",
        "when": "focusedCustomEditorIsEditable && !inputFocus"
    },
    {
        "key": "shift+cmd+z",
        "command": "-editor.action.customEditor.redo",
        "when": "focusedCustomEditorIsEditable && !inputFocus"
    },
    {
        "key": "ctrl+shift+=",
        "command": "editor.action.webvieweditor.redo",
        "when": "!editorFocus && !inputFocus && !webviewHasOwnEditFunctions && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "shift+cmd+z",
        "command": "-editor.action.webvieweditor.redo",
        "when": "!editorFocus && !inputFocus && !webviewHasOwnEditFunctions && activeEditor == 'WebviewEditor'"
    },
    {
        "key": "ctrl+shift+=",
        "command": "redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "shift+cmd+z",
        "command": "-redo",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "cmd+[",
        "command": "cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+up",
        "command": "-cursorTop",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+]",
        "command": "cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "cmd+down",
        "command": "-cursorBottom",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+l",
        "command": "editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+i",
        "command": "-editor.action.insertCursorAtEndOfEachLineSelected",
        "when": "editorTextFocus"
    },
    {
        "key": "shift+alt+b",
        "command": "cursorWordStartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+left",
        "command": "-cursorWordStartLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+f",
        "command": "cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+alt+right",
        "command": "-cursorWordEndRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+b",
        "command": "cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+left",
        "command": "-cursorLeftSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+shift+f",
        "command": "cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "shift+right",
        "command": "-cursorRightSelect",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+cmd+k",
        "command": "workbench.action.terminal.kill"
    },
    {
        "key": "cmd+]",
        "command": "workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+down",
        "command": "-workbench.action.terminal.focusNextPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+[",
        "command": "workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "alt+cmd+up",
        "command": "-workbench.action.terminal.focusPreviousPane",
        "when": "terminalFocus && terminalHasBeenCreated || terminalFocus && terminalProcessSupported"
    },
    {
        "key": "cmd+d",
        "command": "workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "cmd+\\",
        "command": "-workbench.action.terminal.split",
        "when": "terminalFocus && terminalProcessSupported || terminalFocus && terminalWebExtensionContributedProfile"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.joinLines",
        "when": "editorTextFocus && !editorReadonly"
    },
    {
        "key": "ctrl+j",
        "command": "-editor.action.insertLineAfter",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k",
        "command": "-deleteAllRight",
        "when": "textInputFocus && !editorReadonly"
    },
    {
        "key": "ctrl+k",
        "command": "-emacs.C-k",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+j",
        "command": "emacs.cursorPageDown",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+v",
        "command": "-emacs.cursorPageDown",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+k",
        "command": "emacs.cursorPageUp",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    {
        "key": "alt+v",
        "command": "-emacs.cursorPageUp",
        "when": "editorTextFocus && !suggestWidgetVisible"
    }
]
